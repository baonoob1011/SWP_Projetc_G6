import { Button } from '@mui/material';
import {
  Plus,
  User,
  TestTube,
  Mail,
  CheckSquare,
  FileText,
  ArrowRight,
  Shield,
  Award,
  Scale,
  Building,
  Users,
  Clock,
} from 'lucide-react';
import React, { useEffect, useState } from 'react';
import { NavLink } from 'react-router-dom';

type PriceItem = {
  time: string;
  price: number;
};

type ServiceResponse = {
  sampleCollectionMethods: string[];
};

type ServiceItem = {
  serviceRequest: {
    serviceId: number;
    serviceName: string;
    description: string;
    serviceType: string;
    image?: string; // base64 image
  };
  priceListRequest: PriceItem[];
  serviceResponses: ServiceResponse[];
};

const translateServiceType = (type: string): string => {
  switch (type) {
    case 'CIVIL':
      return 'D√¢n s·ª±';
    case 'LEGAL':
      return 'Ph√°p l√Ω';
    case 'IMMIGRATION':
      return 'Di tr√∫';
    default:
      return type;
  }
};

const AdministrativeServiceList = () => {
  const [services, setServices] = useState<ServiceItem[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchServices = async () => {
      try {
        const response = await fetch(
          'http://localhost:8080/api/services/get-all-administrative-service'
        );
        if (!response.ok) {
          setError('Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu d·ªãch v·ª•');
          setLoading(false);
          return;
        }
        const data = await response.json();
        setServices(Array.isArray(data) ? data : []);
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
      } catch (err: any) {
        console.error(err);
        setError(err.message || 'ƒê√£ x·∫£y ra l·ªói');
      } finally {
        setLoading(false);
      }
    };

    fetchServices();
  }, []);

  if (loading)
    return (
      <div className="min-h-screen bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 flex items-center justify-center">
        <div className="bg-white rounded-2xl shadow-xl p-8 flex items-center space-x-4">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-emerald-500"></div>
          <div className="text-lg font-medium text-gray-700">
            ƒêang t·∫£i danh s√°ch d·ªãch v·ª•...
          </div>
        </div>
      </div>
    );

  if (error)
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 to-pink-50 flex items-center justify-center">
        <div className="bg-white rounded-2xl shadow-xl p-8 border-l-4 border-red-500">
          <div className="text-red-700 font-medium">L·ªói: {error}</div>
        </div>
      </div>
    );

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-50 via-green-50 to-teal-100">
      {/* Hero Header */}
      <div className="relative overflow-hidden bg-gradient-to-r from-emerald-600 via-green-600 to-teal-600">
        {/* Overlay m·ªù nh·∫π ƒë·ªÉ l√†m s√¢u m√†u h∆°n */}
        <div className="absolute inset-0 bg-black/20"></div>

        {/* Decorative elements v·ªõi opacity th·∫•p h∆°n */}
        <div className="absolute top-0 left-0 w-72 h-72 bg-white/5 rounded-full -translate-x-36 -translate-y-36"></div>
        <div className="absolute bottom-0 right-0 w-96 h-96 bg-white/10 rounded-full translate-x-48 translate-y-48"></div>

        <div className="relative container mx-auto px-4 py-16">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center space-x-4 mb-6 mt-25">
                <div className="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-600 rounded-xl transform rotate-12 flex items-center justify-center shadow-lg">
                  <Scale className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h1 className="text-4xl font-bold text-white mb-2">
                    D·ªãch V·ª• GeneLink
                  </h1>
                  <p className="text-gray-200 text-lg font-medium">
                    X√©t Nghi·ªám ADN H√†nh Ch√≠nh
                  </p>
                </div>
              </div>

              <div className="flex items-center space-x-6 text-gray-200">
                <div className="flex items-center space-x-1">
                  <Shield className="w-5 h-5" />
                  <span>C√≥ gi√° tr·ªã ph√°p l√Ω</span>
                </div>
                <div className="flex items-center space-x-1">
                  <Award className="w-5 h-5" />
                  <span>ƒê∆∞·ª£c c√¥ng nh·∫≠n</span>
                </div>
              </div>
            </div>
            <div className="hidden lg:block">
              <div className="w-32 h-32 bg-white/10 rounded-full backdrop-blur-sm flex items-center justify-center">
                <div className="w-24 h-24 bg-white/20 rounded-full flex items-center justify-center">
                  <Scale className="w-12 h-12 text-white" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="bg-white shadow-lg sticky top-0 z-40">
        <div className="container mx-auto px-4">
          <div className="flex">
            <button className="px-8 py-4 text-white bg-gradient-to-r from-emerald-400 to-teal-400 font-medium shadow-md">
              X√©t Nghi·ªám ADN H√†nh ch√≠nh
            </button>
            <button className="px-8 py-4 text-gray-600 bg-gray-50 border-r font-medium hover:bg-gray-100 transition-colors">
              X√©t Nghi·ªám ADN D√¢n s·ª±
            </button>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-12">
        {/* Introduction Section */}
        <div className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold bg-gradient-to-r from-emerald-500 to-teal-500 bg-clip-text text-transparent mb-4 flex items-center justify-center">
              <span className="mr-3 text-emerald-500">‚öñÔ∏è</span>
              X√©t Nghi·ªám ADN H√†nh Ch√≠nh
            </h2>
            <div className="w-24 h-1 bg-gradient-to-r from-emerald-400 to-teal-400 mx-auto rounded-full"></div>
          </div>

          <div className="bg-gradient-to-r from-emerald-50 to-teal-50 rounded-2xl p-8 border border-emerald-100 shadow-lg mb-8">
            <h3 className="text-2xl font-bold text-emerald-600 mb-4 flex items-center">
              <span className="mr-3 text-2xl">üìã</span>
              X√©t Nghi·ªám ADN H√†nh Ch√≠nh L√† G√¨?
            </h3>
            <p className="text-emerald-700 font-medium mb-4">
              ƒê·ªãnh nghƒ©a v√† m·ª•c ƒë√≠ch:
            </p>
            <p className="text-gray-700 leading-relaxed text-lg mb-6">
              X√©t nghi·ªám ADN h√†nh ch√≠nh l√† lo·∫°i x√©t nghi·ªám c√≥ gi√° tr·ªã ph√°p l√Ω,
              ƒë∆∞·ª£c th·ª±c hi·ªán theo quy tr√¨nh nghi√™m ng·∫∑t v√† c√≥ th·ªÉ s·ª≠ d·ª•ng l√†m
              b·∫±ng ch·ª©ng trong c√°c th·ªß t·ª•c ph√°p l√Ω, h√†nh ch√≠nh. K·∫øt qu·∫£ x√©t
              nghi·ªám ƒë∆∞·ª£c c√°c c∆° quan nh√† n∆∞·ªõc c√¥ng nh·∫≠n v√† c√≥ th·ªÉ d√πng ƒë·ªÉ gi·∫£i
              quy·∫øt c√°c v·∫•n ƒë·ªÅ v·ªÅ quan h·ªá huy·∫øt th·ªëng trong ph√°p lu·∫≠t.
            </p>

            <div className="bg-white/60 rounded-xl p-6 border-l-4 border-emerald-400">
              <h4 className="text-lg font-bold text-emerald-700 mb-3 flex items-center">
                <Building className="w-5 h-5 mr-2" />
                Kh√°c bi·ªát v·ªõi x√©t nghi·ªám d√¢n s·ª±:
              </h4>
              <ul className="text-gray-700 space-y-2">
                <li className="flex items-start">
                  <span className="text-emerald-500 mr-2">‚úì</span>
                  <span>C√≥ gi√° tr·ªã ph√°p l√Ω, ƒë∆∞·ª£c ph√°p lu·∫≠t c√¥ng nh·∫≠n</span>
                </li>
                <li className="flex items-start">
                  <span className="text-emerald-500 mr-2">‚úì</span>
                  <span>Quy tr√¨nh l·∫•y m·∫´u nghi√™m ng·∫∑t, c√≥ gi√°m s√°t</span>
                </li>
                <li className="flex items-start">
                  <span className="text-emerald-500 mr-2">‚úì</span>
                  <span>C·∫ßn c√≥ ƒë·∫ßy ƒë·ªß gi·∫•y t·ªù t√πy th√¢n</span>
                </li>
                <li className="flex items-start">
                  <span className="text-emerald-500 mr-2">‚úì</span>
                  <span>C√≥ th·ªÉ d√πng l√†m b·∫±ng ch·ª©ng t·∫°i t√≤a √°n</span>
                </li>
              </ul>
            </div>
          </div>
        </div>

        {/* Purpose Section */}
        <div className="grid lg:grid-cols-2 gap-8 mb-16">
          <div className="bg-white rounded-2xl shadow border border-gray-100 p-8 hover:shadow-lg transition-shadow duration-200">
            <div className="flex items-center mb-6">
              <div className="w-12 h-12 bg-gradient-to-r from-emerald-300 to-teal-300 rounded-xl flex items-center justify-center mr-4">
                <Scale className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-bold text-emerald-600">
                M·ª•c ƒë√≠ch s·ª≠ d·ª•ng
              </h3>
            </div>
            <div className="space-y-3">
              {[
                'L√†m gi·∫•y khai sinh cho tr·∫ª em',
                'X√°c nh·∫≠n quan h·ªá cha con trong th·ª´a k·∫ø',
                'Gi·∫£i quy·∫øt tranh ch·∫•p v·ªÅ quy·ªÅn nu√¥i con',
                'Th·ªß t·ª•c nh·∫≠n con nu√¥i c√≥ y·∫øu t·ªë n∆∞·ªõc ngo√†i',
                'X√°c ƒë·ªãnh tr√°ch nhi·ªám c·∫•p d∆∞·ª°ng sau ly h√¥n',
                'C√°c th·ªß t·ª•c di tr√∫, ƒë·ªãnh c∆∞',
              ].map((item, idx) => (
                <div
                  key={idx}
                  className="flex items-center space-x-2 p-3 bg-emerald-50 rounded-lg"
                >
                  <div className="w-2 h-2 bg-emerald-400 rounded-full"></div>
                  <span className="text-gray-700 text-sm font-medium">
                    {item}
                  </span>
                </div>
              ))}
            </div>
          </div>

          <div className="bg-white rounded-2xl shadow border border-gray-100 p-8">
            <div className="flex items-center mb-6">
              <div className="w-12 h-12 bg-gradient-to-r from-teal-300 to-emerald-300 rounded-xl flex items-center justify-center mr-4">
                <FileText className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-bold text-teal-600">
                Gi·∫•y t·ªù c·∫ßn thi·∫øt
              </h3>
            </div>
            <div className="space-y-3">
              {[
                'CMND/CCCD/H·ªô chi·∫øu (b·∫£n g·ªëc)',
                'Gi·∫•y khai sinh (n·∫øu c√≥)',
                'Gi·∫•y t·ªù li√™n quan ƒë·∫øn v·ª• vi·ªác',
                '·∫¢nh 3x4 (2 ·∫£nh m·ªói ng∆∞·ªùi)',
              ].map((item, idx) => (
                <div
                  key={idx}
                  className="flex items-center space-x-3 p-3 bg-teal-50 rounded-lg"
                >
                  <ArrowRight className="w-4 h-4 text-teal-500" />
                  <span className="text-gray-700 font-medium">{item}</span>
                </div>
              ))}
            </div>

            <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
              <div className="flex items-center mb-2">
                <div className="w-5 h-5 bg-yellow-400 rounded-full flex items-center justify-center mr-2">
                  <span className="text-white text-xs">!</span>
                </div>
                <span className="font-bold text-yellow-700">
                  L∆∞u √Ω quan tr·ªçng:
                </span>
              </div>
              <p className="text-yellow-700 text-sm">
                T·∫•t c·∫£ gi·∫•y t·ªù ph·∫£i l√† b·∫£n g·ªëc ho·∫∑c b·∫£n sao c√≥ c√¥ng ch·ª©ng. Ng∆∞·ªùi
                tham gia x√©t nghi·ªám ph·∫£i c√≥ m·∫∑t tr·ª±c ti·∫øp t·∫°i c∆° s·ªü.
              </p>
            </div>
          </div>
        </div>

        {/* Legal Requirements Section */}
        <div className="bg-gradient-to-r from-emerald-100 to-teal-100 rounded-2xl p-6 mb-16 text-gray-900 shadow-lg">
          <h3 className="text-2xl font-bold mb-6 flex items-center">
            <div className="w-12 h-12 bg-white/80 rounded-xl flex items-center justify-center mr-4 ring-2 ring-emerald-300 shadow-md">
              <Users className="w-8 h-8 text-emerald-600" />
            </div>
            Quy ƒë·ªãnh v√† y√™u c·∫ßu ph√°p l√Ω
          </h3>

          <div className="grid md:grid-cols-3 gap-6">
            <div className="bg-white/50 backdrop-blur-sm rounded-xl p-5">
              <div className="flex items-center mb-3">
                <Clock className="w-6 h-6 text-emerald-600 mr-2" />
                <h4 className="text-lg font-semibold text-gray-800">
                  Th·ªùi gian
                </h4>
              </div>
              <p className="text-gray-700 text-sm leading-relaxed">
                K·∫øt qu·∫£ x√©t nghi·ªám c√≥ gi√° tr·ªã vƒ©nh vi·ªÖn, kh√¥ng c√≥ th·ªùi h·∫°n s·ª≠
                d·ª•ng trong c√°c th·ªß t·ª•c ph√°p l√Ω.
              </p>
            </div>

            <div className="bg-white/50 backdrop-blur-sm rounded-xl p-5">
              <div className="flex items-center mb-3">
                <Shield className="w-6 h-6 text-emerald-600 mr-2" />
                <h4 className="text-lg font-semibold text-gray-800">B·∫£o m·∫≠t</h4>
              </div>
              <p className="text-gray-700 text-sm leading-relaxed">
                Th√¥ng tin x√©t nghi·ªám ƒë∆∞·ª£c b·∫£o m·∫≠t tuy·ªát ƒë·ªëi theo quy ƒë·ªãnh ph√°p
                lu·∫≠t, ch·ªâ cung c·∫•p cho ng∆∞·ªùi c√≥ quy·ªÅn.
              </p>
            </div>

            <div className="bg-white/50 backdrop-blur-sm rounded-xl p-5">
              <div className="flex items-center mb-3">
                <Award className="w-6 h-6 text-emerald-600 mr-2" />
                <h4 className="text-lg font-semibold text-gray-800">
                  C√¥ng nh·∫≠n
                </h4>
              </div>
              <p className="text-gray-700 text-sm leading-relaxed">
                ƒê∆∞·ª£c t·∫•t c·∫£ c√°c c∆° quan nh√† n∆∞·ªõc, t√≤a √°n trong v√† ngo√†i n∆∞·ªõc
                c√¥ng nh·∫≠n gi√° tr·ªã ph√°p l√Ω.
              </p>
            </div>
          </div>
        </div>

        {/* Process Steps */}
        <div className="bg-white rounded-2xl shadow-xl p-8 mb-16 border border-gray-100">
          <h3 className="text-2xl font-bold text-center mb-12 text-gray-800">
            Quy tr√¨nh x√©t nghi·ªám ADN h√†nh ch√≠nh t·∫°i GenLink
          </h3>

          <div className="grid grid-cols-1 md:grid-cols-5 gap-8 mt-15">
            {[
              {
                icon: User,
                title: 'T∆∞ v·∫•n v√† chu·∫©n b·ªã',
                subtitle: 'gi·∫•y t·ªù c·∫ßn thi·∫øt',
                color: 'from-emerald-300 to-emerald-400',
              },
              {
                icon: TestTube,
                title: 'Thu m·∫´u c√≥ gi√°m s√°t',
                subtitle: 'theo quy ƒë·ªãnh ph√°p l√Ω',
                color: 'from-teal-300 to-teal-400',
              },
              {
                icon: Mail,
                title: 'V·∫≠n chuy·ªÉn m·∫´u',
                subtitle: 'an to√†n ƒë·∫øn ph√≤ng lab',
                color: 'from-green-300 to-green-400',
              },
              {
                icon: CheckSquare,
                title: 'Ph√¢n t√≠ch chuy√™n s√¢u',
                subtitle: 'v·ªõi c√¥ng ngh·ªá hi·ªán ƒë·∫°i',
                color: 'from-emerald-400 to-teal-400',
              },
              {
                icon: FileText,
                title: 'C·∫•p k·∫øt qu·∫£',
                subtitle: 'c√≥ gi√° tr·ªã ph√°p l√Ω',
                color: 'from-teal-400 to-green-400',
              },
            ].map((step, index) => (
              <div key={index} className="text-center group">
                <div
                  className={`w-20 h-20 bg-gradient-to-r ${step.color} rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:scale-110 transition-transform duration-300`}
                >
                  <step.icon className="w-10 h-10 text-white" />
                </div>
                <h4 className="font-bold text-gray-800 text-sm mb-1">
                  {step.title}
                </h4>
                <p className="text-xs text-gray-600">{step.subtitle}</p>
                {index < 4 && (
                  <ArrowRight className="w-6 h-6 text-gray-300 mx-auto mt-4 hidden md:block" />
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Service List Section */}
        <div className="bg-gradient-to-r from-slate-700 via-gray-700 to-slate-800 rounded-3xl shadow-2xl p-12 relative overflow-hidden">
          {/* Background decoration */}
          <div className="absolute inset-0 bg-gradient-to-r from-emerald-500/10 to-teal-500/10"></div>
          <div className="absolute top-0 right-0 w-64 h-64 bg-emerald-400/5 rounded-full translate-x-32 -translate-y-32"></div>

          <div className="relative z-10">
            <div className="text-center mb-12">
              <h2 className="text-4xl font-bold text-white mb-4">
                Danh s√°ch d·ªãch v·ª• h√†nh ch√≠nh
              </h2>
              <p className="text-gray-300 text-lg">
                D·ªãch v·ª• x√©t nghi·ªám ADN c√≥ gi√° tr·ªã ph√°p l√Ω
              </p>
              <div className="w-32 h-1 bg-gradient-to-r from-emerald-300 to-teal-300 mx-auto mt-4 rounded-full"></div>
            </div>

            {services.length === 0 ? (
              <div className="text-center py-16">
                <div className="w-24 h-24 bg-gray-600 rounded-full flex items-center justify-center mx-auto mb-6">
                  <Scale className="w-12 h-12 text-gray-400" />
                </div>
                <p className="text-gray-400 text-lg">Kh√¥ng c√≥ d·ªãch v·ª• n√†o.</p>
              </div>
            ) : (
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                {services.map((service, index) => (
                  <div
                    key={index}
                    className="bg-white rounded-2xl shadow-xl overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 group"
                  >
                    {service.serviceRequest.image && (
                      <div className="relative overflow-hidden">
                        <img
                          src={`data:image/*;base64,${service.serviceRequest.image}`}
                          className="w-full h-56 object-cover group-hover:scale-110 transition-transform duration-500"
                          alt={service.serviceRequest.serviceName}
                        />
                        <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
                      </div>
                    )}
                    <div className="p-8">
                      <h3 className="text-xl font-bold text-emerald-600 mb-4 text-center">
                        {service.serviceRequest.serviceName}
                      </h3>

                      <div className="space-y-3 mb-6">
                        <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                          <span className="text-sm font-medium text-gray-600">
                            Lo·∫°i d·ªãch v·ª•:
                          </span>
                          <span className="text-sm font-bold text-gray-800 bg-emerald-100 px-3 py-1 rounded-full">
                            {translateServiceType(
                              service.serviceRequest.serviceType
                            )}
                          </span>
                        </div>
                        <div className="p-3 bg-gray-50 rounded-lg">
                          <span className="text-sm font-medium text-gray-600 block mb-2">
                            M√¥ t·∫£:
                          </span>
                          <span className="text-sm text-gray-800 leading-relaxed">
                            {service.serviceRequest.description ||
                              'Kh√¥ng c√≥ m√¥ t·∫£'}
                          </span>
                        </div>
                      </div>

                      <div className="mb-6">
                        <h4 className="text-sm font-bold text-gray-800 mb-3 flex items-center">
                          <div className="w-4 h-4 bg-emerald-400 rounded-full mr-2"></div>
                          B·∫£ng gi√° d·ªãch v·ª•
                        </h4>
                        <div className="space-y-2">
                          {service.priceListRequest.map((item, idx) => (
                            <div
                              key={idx}
                              className="bg-gradient-to-r from-emerald-50 to-teal-50 p-4 rounded-xl border border-emerald-100"
                            >
                              <div className="flex justify-between items-center">
                                <div>
                                  <div className="font-medium text-gray-700">
                                    ‚è±Ô∏è {item.time}
                                  </div>
                                  <div className="text-2xl font-bold text-emerald-600">
                                    {item.price.toLocaleString()}{' '}
                                    <span className="text-sm">VNƒê</span>
                                  </div>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>

                      <div className="text-center">
                        <Button
                          variant="contained"
                          component={NavLink}
                          to={`/order-administrative/${service.serviceRequest.serviceId}`}
                          state={{ price: service.priceListRequest }}
                          sx={{
                            background:
                              'linear-gradient(45deg, #10b981 30%, #14b8a6 90%)',
                            color: 'white',
                            padding: '12px 32px',
                            borderRadius: '12px',
                            fontWeight: 'bold',
                            boxShadow: '0 8px 16px rgba(16, 185, 129, 0.3)',
                            '&:hover': {
                              background:
                                'linear-gradient(45deg, #059669 30%, #0d9488 90%)',
                              transform: 'scale(1.05)',
                              boxShadow: '0 12px 24px rgba(16, 185, 129, 0.4)',
                            },
                            transition: 'all 0.3s ease',
                            display: 'flex',
                            alignItems: 'center',
                            gap: '8px',
                          }}
                        >
                          <Plus size={20} />
                          ƒê·∫∑t l·ªãch
                        </Button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdministrativeServiceList;
