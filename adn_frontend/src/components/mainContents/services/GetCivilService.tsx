import React, { useEffect, useState } from 'react';
import { Plus, User, TestTube, Mail, CheckSquare, FileText, ArrowRight, Shield, Award, Clock, Phone } from 'lucide-react';

type PriceItem = {
  time: string;
  price: number;
};

type ServiceResponse = {
  sampleCollectionMethods: string[];
};

type ServiceItem = {
  serviceRequest: {
    serviceId: number;
    serviceName: string;
    description: string;
    serviceType: string;
    image?: string;
  };
  priceListRequest: PriceItem[];
  serviceResponses: ServiceResponse[];
};

const translateServiceType = (type: string): string => {
  switch (type) {
    case 'CIVIL':
      return 'D√¢n s·ª±';
    case 'LEGAL':
      return 'Ph√°p l√Ω';
    case 'IMMIGRATION':
      return 'Di tr√∫';
    default:
      return type;
  }
};

const CivilServiceList = () => {
  const [services, setServices] = useState<ServiceItem[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchServices = async () => {
      try {
        const response = await fetch(
          'http://localhost:8080/api/services/get-all-civil-service'
        );
        if (!response.ok) {
          throw new Error('Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu d·ªãch v·ª•');
        }
        const data = await response.json();
        setServices(Array.isArray(data) ? data : []);
      } catch (err: any) {
        setError(err.message || 'ƒê√£ x·∫£y ra l·ªói');
      } finally {
        setLoading(false);
      }
    };

    fetchServices();
  }, []);

  if (loading)
    return (
      <div className="min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-cyan-50 flex items-center justify-center">
        <div className="bg-white rounded-2xl shadow-xl p-8 flex items-center space-x-4">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-sky-400"></div>
          <div className="text-lg font-medium text-gray-700">ƒêang t·∫£i danh s√°ch d·ªãch v·ª•...</div>
        </div>
      </div>
    );

  if (error)
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 to-pink-50 flex items-center justify-center">
        <div className="bg-white rounded-2xl shadow-xl p-8 border-l-4 border-red-500">
          <div className="text-red-700 font-medium">L·ªói: {error}</div>
        </div>
      </div>
    );

  return (
    <div className="min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-cyan-100">
      {/* Hero Header */}
      <div className="relative overflow-hidden bg-gradient-to-r from-sky-400 via-blue-400 to-cyan-400">
        <div className="absolute inset-0 bg-black/10"></div>
        <div className="absolute inset-0 bg-gradient-to-r from-sky-400/90 to-cyan-400/90"></div>
        
        {/* Decorative elements */}
        <div className="absolute top-0 left-0 w-72 h-72 bg-white/10 rounded-full -translate-x-36 -translate-y-36"></div>
        <div className="absolute bottom-0 right-0 w-96 h-96 bg-white/5 rounded-full translate-x-48 translate-y-48"></div>
        
        <div className="relative container mx-auto px-4 py-16">
          <div className="flex items-center justify-between">
            <div>
              <div className="flex items-center space-x-4 mb-6">
                <div className="w-12 h-12 bg-gradient-to-r from-cyan-300 to-blue-300 rounded-xl transform rotate-12 flex items-center justify-center shadow-lg">
                  <TestTube className="w-6 h-6 text-white" />
                </div>
                <div>
                  <h1 className="text-4xl font-bold text-white mb-2">D·ªãch V·ª• GenLink</h1>
                  <p className="text-sky-50 text-lg font-medium">X√©t Nghi·ªám ADN D√¢n S·ª± Chuy√™n Nghi·ªáp</p>
                </div>
              </div>
              <div className="flex items-center space-x-6 text-sky-50">
                <div className="flex items-center space-x-2">
                  <Shield className="w-5 h-5" />
                  <span>Ch√≠nh x√°c 99.9%</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Award className="w-5 h-5" />
                  <span>ISO 17025</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Clock className="w-5 h-5" />
                  <span>K·∫øt qu·∫£ trong 5-7 ng√†y</span>
                </div>
              </div>
            </div>
            <div className="hidden lg:block">
              <div className="w-32 h-32 bg-white/10 rounded-full backdrop-blur-sm flex items-center justify-center">
                <div className="w-24 h-24 bg-white/20 rounded-full flex items-center justify-center">
                  <TestTube className="w-12 h-12 text-white" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="bg-white shadow-lg sticky top-0 z-40">
        <div className="container mx-auto px-4">
          <div className="flex">
            <button className="px-8 py-4 text-gray-600 bg-gray-50 border-r font-medium hover:bg-gray-100 transition-colors">
              X√©t Nghi·ªám ADN H√†nh ch√≠nh
            </button>
            <button className="px-8 py-4 text-white bg-gradient-to-r from-sky-400 to-cyan-400 font-medium shadow-md">
              X√©t Nghi·ªám ADN D√¢n s·ª±
            </button>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-12">
        
        {/* Introduction Section */}
        <div className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold bg-gradient-to-r from-sky-500 to-cyan-500 bg-clip-text text-transparent mb-4 flex items-center justify-center">
              <span className="mr-3 text-sky-500">‚úì</span>
              X√©t Nghi·ªám ADN D√¢n S·ª±
            </h2>
            <div className="w-24 h-1 bg-gradient-to-r from-sky-400 to-cyan-400 mx-auto rounded-full"></div>
          </div>
          
          <div className="bg-gradient-to-r from-sky-50 to-cyan-50 rounded-2xl p-8 border border-sky-100 shadow-lg mb-8">
            <h3 className="text-2xl font-bold text-sky-600 mb-4 flex items-center">
              <span className="mr-3 text-2xl">üéØ</span>
              T·∫ßm Quan V·ªÅ X√©t Nghi·ªám ADN
            </h3>
            <p className="text-sky-700 font-medium mb-4">X√©t nghi·ªám ADN l√† g√¨?</p>
            <p className="text-gray-700 leading-relaxed text-lg">
              X√©t nghi·ªám ADN (DNA test) l√† ph∆∞∆°ng ph√°p ph√¢n t√≠ch th√¥ng tin di truy·ªÅn trong ADN c·ªßa m·ªói ng∆∞·ªùi nh·∫±m x√°c ƒë·ªãnh 
              m·ªëi quan h·ªá huy·∫øt th·ªëng, c·∫£nh b√°o c√° nh√¢n, ho·∫∑c ph√°t hi·ªán nguy c∆° b·ªánh l√Ω di truy·ªÅn. ADN (Acid Deoxyribonucleic) 
              l√† v·∫≠t ch·∫•t di truy·ªÅn c√≥ trong m·ªçi t·∫ø b√†o s·ªëng, mang th√¥ng tin ƒë·∫∑c tr∆∞ng duy nh·∫•t c·ªßa c∆° th·ªÉ.
            </p>
          </div>
        </div>

        {/* Service Types Section */}
        <div className="grid lg:grid-cols-2 gap-8 mb-16">
          <div className="bg-white rounded-2xl shadow-xl p-8 border border-gray-100 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center mb-6">
              <div className="w-12 h-12 bg-gradient-to-r from-sky-300 to-cyan-300 rounded-xl flex items-center justify-center mr-4">
                <User className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-bold text-sky-600">X√©t nghi·ªám ADN t·ª± nguy·ªán</h3>
            </div>
            <p className="text-gray-600 mb-4 font-medium">Nh·∫±m x√°c ƒë·ªãnh m·ªëi quan h·ªá:</p>
            <div className="grid grid-cols-2 gap-3">
              {['Cha/m·∫π-con', '√îng/b√†-ch√°u', 'Anh/ch·ªã-em', 'H·ªç h√†ng n·ªôi ngo·∫°i'].map((item, idx) => (
                <div key={idx} className="flex items-center space-x-2 p-3 bg-sky-50 rounded-lg">
                  <div className="w-2 h-2 bg-sky-400 rounded-full"></div>
                  <span className="text-gray-700 text-sm font-medium">{item}</span>
                </div>
              ))}
            </div>
          </div>

          <div className="bg-white rounded-2xl shadow-xl p-8 border border-gray-100 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center mb-6">
              <div className="w-12 h-12 bg-gradient-to-r from-cyan-300 to-blue-300 rounded-xl flex items-center justify-center mr-4">
                <FileText className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-bold text-cyan-600">X√©t nghi·ªám ADN h√†nh ch√≠nh</h3>
            </div>
            <div className="space-y-3">
              {[
                'L√†m gi·∫•y khai sinh',
                'Th·ªß t·ª•c nh·∫≠n ng∆∞·ªùi th√¢n', 
                'X√°c nh·∫≠n tr√°ch nhi·ªám c·∫•p d∆∞·ª°ng sau ly h√¥n',
                'Ph√¢n chia t√†i s·∫£n th·ª´a k·∫ø',
                'C√°c th·ªß t·ª•c ph√°p l√Ω kh√°c'
              ].map((item, idx) => (
                <div key={idx} className="flex items-center space-x-3 p-3 bg-cyan-50 rounded-lg hover:bg-cyan-100 transition-colors">
                  <ArrowRight className="w-4 h-4 text-cyan-500" />
                  <span className="text-gray-700 font-medium">{item}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Sample Types Section */}
        <div className="bg-gradient-to-r from-sky-400 to-cyan-400 rounded-2xl p-8 mb-16 text-white shadow-2xl">
          <h3 className="text-2xl font-bold mb-6 flex items-center">
            <div className="w-10 h-10 bg-white/20 rounded-xl flex items-center justify-center mr-4">
              <TestTube className="w-6 h-6" />
            </div>
            C√°c lo·∫°i m·∫´u s·ª≠ d·ª•ng ƒë·ªÉ x√©t nghi·ªám ADN
          </h3>
          
          <div className="grid md:grid-cols-2 gap-8">
            <div className="bg-white/10 backdrop-blur rounded-xl p-6">
              <h4 className="text-xl font-semibold mb-4 text-sky-50">M·∫´u th√¥ng th∆∞·ªùng</h4>
              <p className="text-sky-50 leading-relaxed">
                M√°u mau, ni√™m m·∫°c mi·ªáng, t√≥c c√≥ ch√¢n, m√≥ng tay/m√≥ng ch√¢n, cu·ªëng r·ªën
              </p>
            </div>
            <div className="bg-white/10 backdrop-blur rounded-xl p-6">
              <h4 className="text-xl font-semibold mb-4 text-sky-50">M·∫´u ƒë·∫∑c bi·ªát</h4>
              <p className="text-sky-50 leading-relaxed">
                X∆∞∆°ng, rƒÉng, ƒë·∫ßu l·ªçc thu·ªëc l√°, b√†n ch·∫£i ƒë√°nh rƒÉng, k·∫πo cao su, bao cao su, qu·∫ßn l√≥t
              </p>
            </div>
          </div>
        </div>

        {/* Process Steps */}
        <div className="bg-white rounded-2xl shadow-xl p-8 mb-16 border border-gray-100">
          <h3 className="text-2xl font-bold text-center mb-12 text-gray-800">
            Quy tr√¨nh x√©t nghi·ªám ADN t·∫°i GenLink
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-5 gap-8">
            {[
              { icon: User, title: 'T∆∞ v·∫•n l·ª±a ch·ªçn', subtitle: 'd·ªãch v·ª•', color: 'from-sky-300 to-sky-400' },
              { icon: TestTube, title: 'Thu m·∫´u x√©t', subtitle: 'nghi·ªám theo h∆∞·ªõng d·∫´n', color: 'from-cyan-300 to-cyan-400' },
              { icon: Mail, title: 'Chuy·ªÉn m·∫´u ƒë·∫øn', subtitle: 'c∆° s·ªü', color: 'from-blue-300 to-blue-400' },
              { icon: CheckSquare, title: 'C∆° s·ªü ph√¢n t√≠ch', subtitle: 'm·∫´u', color: 'from-sky-400 to-cyan-400' },
              { icon: FileText, title: 'GenLink tr·∫£ k·∫øt', subtitle: 'qu·∫£', color: 'from-cyan-400 to-blue-400' }
            ].map((step, index) => (
              <div key={index} className="text-center group">
                <div className={`w-20 h-20 bg-gradient-to-r ${step.color} rounded-2xl flex items-center justify-center mx-auto mb-4 shadow-lg group-hover:scale-110 transition-transform duration-300`}>
                  <step.icon className="w-10 h-10 text-white" />
                </div>
                <h4 className="font-bold text-gray-800 text-sm mb-1">{step.title}</h4>
                <p className="text-xs text-gray-600">{step.subtitle}</p>
                {index < 4 && (
                  <ArrowRight className="w-6 h-6 text-gray-300 mx-auto mt-4 hidden md:block" />
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Service List Section */}
        <div className="bg-gradient-to-r from-slate-700 via-gray-700 to-slate-800 rounded-3xl shadow-2xl p-12 relative overflow-hidden">
          {/* Background decoration */}
          <div className="absolute inset-0 bg-gradient-to-r from-sky-500/10 to-cyan-500/10"></div>
          <div className="absolute top-0 right-0 w-64 h-64 bg-sky-400/5 rounded-full translate-x-32 -translate-y-32"></div>
          
          <div className="relative z-10">
            <div className="text-center mb-12">
              <h2 className="text-4xl font-bold text-white mb-4">Danh s√°ch d·ªãch v·ª• d√¢n s·ª±</h2>
              <p className="text-gray-300 text-lg">Ch·ªçn d·ªãch v·ª• ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n</p>
              <div className="w-32 h-1 bg-gradient-to-r from-sky-300 to-cyan-300 mx-auto mt-4 rounded-full"></div>
            </div>
            
            {services.length === 0 ? (
              <div className="text-center py-16">
                <div className="w-24 h-24 bg-gray-600 rounded-full flex items-center justify-center mx-auto mb-6">
                  <TestTube className="w-12 h-12 text-gray-400" />
                </div>
                <p className="text-gray-400 text-lg">Kh√¥ng c√≥ d·ªãch v·ª• n√†o.</p>
              </div>
            ) : (
              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                {services.map((service, index) => (
                  <div key={index} className="bg-white rounded-2xl shadow-xl overflow-hidden hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 group">
                    {service.serviceRequest.image && (
                      <div className="relative overflow-hidden">
                        <img
                          src={`data:image/*;base64,${service.serviceRequest.image}`}
                          className="w-full h-56 object-cover group-hover:scale-110 transition-transform duration-500"
                          alt={service.serviceRequest.serviceName}
                        />
                        <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
                      </div>
                    )}
                    <div className="p-8">
                      <h3 className="text-xl font-bold text-sky-600 mb-4 text-center">
                        {service.serviceRequest.serviceName}
                      </h3>
                      
                      <div className="space-y-3 mb-6">
                        <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                          <span className="text-sm font-medium text-gray-600">Lo·∫°i d·ªãch v·ª•:</span>
                          <span className="text-sm font-bold text-gray-800 bg-sky-100 px-3 py-1 rounded-full">
                            {translateServiceType(service.serviceRequest.serviceType)}
                          </span>
                        </div>
                        <div className="p-3 bg-gray-50 rounded-lg">
                          <span className="text-sm font-medium text-gray-600 block mb-2">M√¥ t·∫£:</span>
                          <span className="text-sm text-gray-800 leading-relaxed">
                            {service.serviceRequest.description || 'Kh√¥ng c√≥ m√¥ t·∫£'}
                          </span>
                        </div>
                      </div>

                      <div className="mb-6">
                        <h4 className="text-sm font-bold text-gray-800 mb-3 flex items-center">
                          <div className="w-4 h-4 bg-sky-400 rounded-full mr-2"></div>
                          B·∫£ng gi√° d·ªãch v·ª•
                        </h4>
                        <div className="space-y-2">
                          {service.priceListRequest.map((item, idx) => (
                            <div key={idx} className="bg-gradient-to-r from-sky-50 to-cyan-50 p-4 rounded-xl border border-sky-100">
                              <div className="flex justify-between items-center">
                                <div>
                                  <div className="font-medium text-gray-700">‚è±Ô∏è {item.time}</div>
                                  <div className="text-2xl font-bold text-sky-600">
                                    {item.price.toLocaleString()} <span className="text-sm">VNƒê</span>
                                  </div>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>

                      <div className="text-center">
                        <a
                          href={`/order/${service.serviceRequest.serviceId}`}
                          className="inline-flex items-center space-x-3 bg-gradient-to-r from-sky-400 to-cyan-400 text-white px-8 py-4 rounded-xl hover:from-sky-500 hover:to-cyan-500 transition-all duration-300 font-bold shadow-lg hover:shadow-xl transform hover:scale-105"
                        >
                          <Plus size={20} />
                          <span>ƒê·∫∑t l·ªãch t·∫°i c∆° s·ªü</span>
                        </a>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>

        {/* Contact CTA */}
        <div className="mt-16 text-center">
          <div className="bg-gradient-to-r from-sky-400 to-cyan-400 rounded-2xl p-8 text-white">
            <Phone className="w-16 h-16 mx-auto mb-4 text-sky-100" />
            <h3 className="text-2xl font-bold mb-2">C·∫ßn t∆∞ v·∫•n th√™m?</h3>
            <p className="text-sky-50 mb-6">Li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ 24/7</p>
            <div className="flex flex-wrap justify-center gap-4">
              <a href="tel:1900xxxx" className="bg-white text-sky-600 px-6 py-3 rounded-lg font-bold hover:bg-sky-50 transition-colors">
                üìû 1900 xxxx
              </a>
              <a href="mailto:info@genlink.vn" className="bg-sky-500 text-white px-6 py-3 rounded-lg font-bold hover:bg-sky-400 transition-colors">
                ‚úâÔ∏è info@genlink.vn
              </a>
            </div>
          </div>
        </div>

      </div>

      
    </div>
  );
};

export default CivilServiceList;